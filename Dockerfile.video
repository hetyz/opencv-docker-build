ARG BUILDER_IMAGE
FROM ${BUILDER_IMAGE} AS builder

FROM public.ecr.aws/lambda/provided:al2

RUN yum update -y && \
    yum install -y gtk2 libX11 libXext libXrender jq && \
    yum clean all

# ! Itt a változás: nem a build stage-ből, hanem az opencv-builder image-ből copy-zunk!
COPY --from=builder /build/opencv/build/bin/opencv_test_video /var/task/opencv_test_video
COPY --from=builder /build/opencv/build/lib/libopencv_*.so.* /var/task/

# ... (marad a bootstrap script stb.)

WORKDIR /var/runtime

RUN echo '#!/bin/sh' > bootstrap && \
    echo 'set -euo pipefail' >> bootstrap && \
    echo 'HANDLER_PATH="/var/task/opencv_test_video"' >> bootstrap && \
    echo 'RIC="${AWS_LAMBDA_RUNTIME_API}"' >> bootstrap && \
    echo 'TOP_N="${TOP_N:-5}"' >> bootstrap && \
    echo '[ -x "$HANDLER_PATH" ] || { echo "Not executable: $HANDLER_PATH" >&2; exit 127; }' >> bootstrap && \
    echo 'REQ=$(mktemp); BODY=$(mktemp)' >> bootstrap && \
    echo 'curl -sfS -D "$REQ" -o "$BODY" "http://$RIC/2018-06-01/runtime/invocation/next" >/dev/null' >> bootstrap && \
    echo 'REQ_ID=$(sed -n "s/\r\$//;s/^Lambda-Runtime-Aws-Request-Id: //p" "$REQ" | head -n1)' >> bootstrap && \
    echo 'PASSED=0; FAILED=0' >> bootstrap && \
    echo '"$HANDLER_PATH" --gtest_list_tests | gawk '\''/^[^ ]/ {suite=$1; sub(/\.$/, "", suite)} /^[ ]/ {gsub(/^ +/, ""); print suite"."$1}'\'' | head -n "$TOP_N" | while read -r TEST; do' >> bootstrap && \
    echo '  echo "== RUNNING: [$TEST] ==" ' >> bootstrap && \
    echo '  if "$HANDLER_PATH" --gtest_filter="$TEST"; then PASSED=$((PASSED+1)); else FAILED=$((FAILED+1)); fi' >> bootstrap && \
    echo 'done' >> bootstrap && \
    echo 'STATUS="ok"; [ "$FAILED" -gt 0 ] && STATUS="failed"' >> bootstrap && \
    echo 'RESP=$(jq -n --arg status "$STATUS" --argjson passed "$PASSED" --argjson failed "$FAILED" --argjson top_n "$TOP_N" '\''{status:$status,summary:{passed:$passed,failed:$failed,top_n:$top_n}}'\'')' >> bootstrap && \
    echo 'printf "%s" "$RESP" | curl -sfS -X POST "http://$RIC/2018-06-01/runtime/invocation/$REQ_ID/response" -H "Content-Type: application/json" -d @- >/dev/null' >> bootstrap && \
    echo 'rm -f "$REQ" "$BODY"' >> bootstrap && \
    chmod +x bootstrap

ENV LD_LIBRARY_PATH=/var/task:$LD_LIBRARY_PATH

ENTRYPOINT ["/var/runtime/bootstrap"]

